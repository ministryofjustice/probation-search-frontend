{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}

<form id="{{ params.id }}-form" class="probation-search__form" method="POST">
    <input type="hidden" name="_csrf" value="{{ params.results.csrfToken }}">

    <div class="probation-search__input-container">
        {{ govukInput({
            attributes: params.attributes,
            autocomplete: params.autocomplete,
            classes: params.classes,
            errorMessage: params.results.errorMessage,
            hint: params.hint if params.hint else {
                text: "Search using identifiers, names, aliases, date of birth..."
            },
            id: params.id,
            label: params.label if params.label else {
                text: "Search for a person on probation",
                classes: "govuk-label--l",
                isPageHeading: true
            },
            name: "probation-search-input",
            type: params.type if params.type else "search",
            value: params.results.query
        }) }}

        <p id="{{ params.id }}-suggestions" class="probation-search__suggestions">
            {% if params.results.suggestions | length %}
                Did you mean
                {%- set comma = joiner() %}
                {%- for suggestion in params.results.suggestions %}{{ comma() }}
                    <a href="#" data-suggested-query="{{ suggestion.newQuery }}"
                       class="govuk-link govuk-link--no-visited-state"
                       title="Search again using {{ suggestion.text }}">{{ suggestion.text }}</a>
                {%- endfor %}?
            {% endif %}
            <script nonce="{{ params.results.cspNonce }}">
              document.getElementById("{{ params.id }}-suggestions").addEventListener("click", e => {
                if (e.target.dataset.suggestedQuery) {
                  document.getElementById("{{ params.id }}").value = e.target.dataset.suggestedQuery;
                  document.getElementById("{{ params.id }}-form").submit();
                }
              });
            </script>
        </p>

        {% if params.postHint %}
            {{ params.postHint.html | safe if params.postHint.html else '<p>' + params.postHint.text + '</p>' }}
        {% endif %}

        {% if params.searchOnInput %}
            <label for="{{ params.id }}" class="govuk-visually-hidden">Results will be updated as you type</label>
            <script nonce="{{ params.results.cspNonce }}">
              (() => {
                let timeoutId = null;

                function doSearch(updateHistory = true) {
                  clearTimeout(timeoutId);
                  const url = new URL(location.href);
                  url.search = "";
                  timeoutId = setTimeout(() => {
                    retry(() => fetch(url, {
                      method: "POST",
                      body: new URLSearchParams(new FormData(document.getElementById("{{ params.id }}-form")))
                    })).then(async response => {
                      if (response.status === 200) {
                        const doc = new DOMParser().parseFromString(await response.text(), "text/html");
                        if (document.getElementById("{{ params.id }}-error") || doc.getElementById("{{ params.id }}-error")) document.getElementById("{{ params.id }}-form").submit();
                        document.getElementById("{{ params.id }}-results-container").innerHTML = doc.getElementById("{{ params.id }}-results-container").innerHTML;
                        document.getElementById("{{ params.id }}-results-container").classList = doc.getElementById("{{ params.id }}-results-container").classList;
                        document.getElementById("{{ params.id }}-suggestions").innerHTML = doc.getElementById("{{ params.id }}-suggestions").innerHTML;
                        document.getElementsByName("_csrf")[0].value = doc.getElementsByName("_csrf")[0].value;
                        if (updateHistory) history.pushState({ query: document.getElementById("{{ params.id }}").value }, "", url);
                      } else {
                        handleError(new Error("Search request failed with status " + response.status));
                      }
                    }).catch(reason => handleError(new Error(reason)));
                  }, 250);
                }

                function handleError(error) {
                  document.getElementById("{{ params.id }}-results-container").innerHTML = "<div class=\"govuk-error-summary\"><h2 class=\"govuk-error-summary__title\">Something went wrong</h2><div class=\"govuk-error-summary__body\">The error has been logged. Please try again.</div></div>";
                  document.getElementById("{{ params.id }}-suggestions").innerHTML = "";
                  throw error;
                }

                function retry(promiseFn, retries = 3, delay = 100) {
                  return new Promise((resolve, reject) => {
                    promiseFn().then(resolve).catch(error => {
                      if (retries > 0) setTimeout(() => retry(promiseFn, retries - 1, delay).then(resolve).catch(reject), delay);
                      reject(error || new Error("Maximum retries exceeded"));
                    });
                  });
                }

                document.getElementById("{{ params.id }}").addEventListener("input", doSearch);
                document.getElementById("{{ params.id }}-form").addEventListener("submit", e => {
                  doSearch();
                  e.preventDefault();
                });
                addEventListener("popstate", e => {
                  if (e.state && e.state.query) {
                    document.getElementById("{{ params.id }}").value = e.state.query;
                    doSearch(false);
                  }
                });
              })();
            </script>
        {% else %}
            {{ govukButton({ text: "Search" }) }}
        {% endif %}
    </div>
</form>

<div id="{{ params.id }}-results-container"
     class="probation-search__results-container {{ 'probation-search__has-results' if params.results.results else '' }}">
{% include "./results.njk" %}
</div>